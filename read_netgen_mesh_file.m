%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Copyright (c) 2018 Gdañsk University of Technology
% 
% Unless otherwise indicated, Source Code is licensed under MIT license.
% See further explanation attached in License Statement (distributed in the file LICENSE).
% 
% Permission is hereby granted, free of charge, to any person obtaining a copy of
% this software and associated documentation files (the "Software"), to deal in
% the Software without restriction, including without limitation the rights to
% use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
% of the Software, and to permit persons to whom the Software is furnished to do
% so, subject to the following conditions:
% 
% The above copyright notice and this permission notice shall be included in all
% copies or substantial portions of the Software.
% 
% THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
% EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
% MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
% NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
% BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
% ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
% CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
% SOFTWARE.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% LocateThetaIn3DMesh: Locate Tetrahedra in 3D Mesh
% Content: a goal of a function is to read a *.mesh  file
% Author: Adam Dziekonski
% Generated August 2018
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% input:
% file_name - a name of a file *.mesh exported from a Netgen

%% output:
% Nodes - nodes generated by Netgen
% Teta  - tetrahedra generated by Netgen
% Faces - faces generated by Netgen

function [Nodes, Teta, Faces] = read_netgen_mesh_file( file_name )
fidInFile = fopen(file_name, 'r');

%% Load nodes:
tline = fgetl(fidInFile);

% Load no of nodes:
N = sscanf(tline, '%f');

% Load:
Nodes = fscanf(fidInFile,'%f %f %f', [3 N])';

%% Load Tetrahedra:
tline = fgetl(fidInFile);
tline = fgetl(fidInFile);
%tline = fgetl(fidInFile)

% Load no of tetrahedra
N = sscanf(tline, '%f');
% Load:
Tetrahedra = fscanf(fidInFile,'%d %d %d %d %d', [5 N])';

tline = fgetl(fidInFile);
tline = fgetl(fidInFile);

%% Load Faces:
% Load no of faces
N = sscanf(tline, '%f');
% Load:
Faces = fscanf(fidInFile,'%d %d %d %d', [4 N])';

fclose(fidInFile);

% reduction for walking:
% Nodes = Nodes;   
Teta  = Tetrahedra(:,2:end);
Faces = Faces(:,2:end);

% size(Nodes)
% size(Teta)
% size(Faces)

str = sprintf('File: %s loaded', file_name); disp(str);
str = sprintf('Nodes = %d x %d', size(Nodes)); disp(str);
str = sprintf('Tetas = %d x %d', size(Teta)); disp(str);
str = sprintf('Faces = %d x %d', size(Faces)); disp(str);
end